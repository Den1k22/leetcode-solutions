"""
Дачники
(Время: 1 сек. Память: 16 Мб Сложность: 45%)
Всем известно, что дачники – народ странный, почти такой же, как и программисты. Строят они свои дачи непонятно где, да и выращивают там непонятно что и непонятно зачем. А уж как они туда добираются, это другая история: кто на автобусе, кто на электричке, кто на автомобиле, ну а кто-то вовсе пешком ходит от дома и до самого участка. Так что не стоит удивляться, если вдруг Вы узнаете, что некое садоводческое товарищество располагается на острове, а дачники добираются до него самолетом. Да еще и на этом острове может не быть посадочной полосы, так что высадиться на остров можно, только прыгая с парашютом (мы уж не рассматриваем то, как они возвращаются с дач домой). Рассмотрим этот уникальный случай. Пилот всегда старается осуществить высадку парашютистов таким образом, чтобы дачники приземлялись как можно ближе к своим прямоугольным участкам. Пилоту интересно знать: сколько дачников приземлится на свои участки? Помогите ему решить эту задачу!

Входные данные
В первой строке входного файла INPUT.TXT записано натуральное число N (1 ≤ N ≤ 1000) – количество дачников, далее идут N строк, в каждой из которых описаны координаты каждого дачника и его участка:
X Y X1 Y1 X2 Y2 X3 Y3 X4 Y4
где
(X,Y) – координаты приземления парашютиста
(X1, Y1, X2, Y2, X3, Y3, X4,Y4) – координаты прямоугольного участка на плоскости, указанные последовательно.
Все координаты – целые числа, не превышающие 50000 по абсолютной величине

Выходные данные
В выходной файл OUTPUT.TXT нужно вывести количество дачников, приземлившихся на свой участок. Попадание на границу участка считается попаданием на участок.

Пример
INPUT.TXT	
3
6 6 3 6 6 9 8 7 5 4
13 5 9 2 9 8 12 8 12 2
3 2 2 1 2 3 6 3 6 1

OUTPUT.TXT
2
"""

def calc(line):
  x,y,x1,y1,x2,y2,x3,y3,x4,y4 = line.split(" ")

  ABx, ABy = int(x2) - int(x1), int(y2) - int(y1)
  ADx, ADy = int(x4) - int(x1), int(y4) - int(y1)
  APx, APy = int(x) - int(x1), int(y) - int(y1)

  dotAB = ABx * ABx + ABy * ABy
  dotAD = ADx * ADx + ADy * ADy

  projAB = APx * ABx + APy * ABy
  projAD = APx * ADx + APy * ADy

  return 1 if (0 <= projAB <= dotAB and 0 <= projAD <= dotAD) else 0

res = 0
input_file = open("INPUT.TXT","r")
n = input_file.readline()
for i in range(int(n)):
    res += calc(input_file.readline())
    
input_file.close()

output_file = open("OUTPUT.TXT","w")
output_file.write(str(res))
output_file.close()





def calc(line):
  x,y,x1,y1,x2,y2,x3,y3,x4,y4 = line.split(" ")
  ABx,ABy=int(x2)-int(x1),int(y2)-int(y1)
  ADx,ADy=int(x4)-int(x1),int(y4)-int(y1)
  APx,APy=int(x)-int(x1),int(y)-int(y1)
  return 1 if (0<=(APx*ABx+APy*ABy)<=(ABx*ABx+ABy*ABy) and 0<=(APx*ADx+APy*ADy)<=(ADx*ADx+ADy*ADy)) else 0
r=0
i=open("INPUT.TXT","r")
n=i.readline()
for _ in range(int(n)):
  r+=calc(i.readline())
i.close()
o = open("OUTPUT.TXT","w")
o.write(str(r))
o.close()
